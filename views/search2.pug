extends layout

block content
    .container.mt-4
        .row
            .col-12
                h2 Upload Files
                form(id='uploadForm' action='/upload' method='post' enctype='multipart/form-data' onsubmit='registerFiles(event)')
                    .mb-3
                        input.form-control(type='file' id='formFile' name='file' multiple)
                        button#uploadButton.btn.btn-primary.mt-2(type='submit') Upload
                hr
                h3 Selected Files
                table.table.table-bordered.mt-3
                    thead
                        tr
                            th Selected Files
                    tbody#fileList
                        tr
                            td.colspan-4.text-center No files selected
                hr
                button#submitButton.btn.btn-primary(type='button' onclick='submitFiles()') Submit
                p#status <strong>Status:</strong> Idle
                hr
                h3 Results
                table.table.table-bordered.mt-3
                    thead
                        tr
                            th BGC Name
                            th GCF ID
                            th Membership Value
                    tbody#results
                        tr
                            td.colspan-3.text-center No results to display
                hr


append head
    link(rel="stylesheet", href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.css")
    script(src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js")

    link(rel="stylesheet", href="https://cdn.datatables.net/searchbuilder/1.4.2/css/searchBuilder.bootstrap5.min.css")
    link(rel="stylesheet", href="https://cdn.datatables.net/datetime/1.4.1/css/dataTables.dateTime.min.css")
    script(href="https://cdn.datatables.net/datetime/1.4.1/js/dataTables.dateTime.min.js")
    script(src="https://cdn.datatables.net/searchbuilder/1.4.2/js/dataTables.searchBuilder.min.js")
    script(src="https://cdn.datatables.net/searchbuilder/1.4.2/js/searchBuilder.bootstrap5.min.js")
    script(src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js")
    link(rel="stylesheet", href="https://cdn.datatables.net/buttons/2.3.6/css/buttons.dataTables.min.css")
    link(rel="stylesheet", href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css")

    style.
        #upload-status-message {
            font-size: 1em;
            color: #007bff;
        }

    script.
        let selectedFiles = [];

        function registerFiles(event) {
            event.preventDefault();
            const input = document.getElementById('formFile');
            const fileList = document.getElementById('fileList');

            const newFiles = Array.from(input.files);

            // Filter out files that are already in the selectedFiles array
            const uniqueNewFiles = newFiles.filter(file => {
                return !selectedFiles.some(existingFile => existingFile.name === file.name && existingFile.size === file.size && existingFile.lastModified === file.lastModified);
            });

            selectedFiles = selectedFiles.concat(uniqueNewFiles);

            updateFileListDisplay();
            toggleSubmitButton(); // Call here to update the submit button state
        }

        function updateFileListDisplay() {
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const row = document.createElement('tr');
                const cell = document.createElement('td');
                cell.textContent = file.name;
                const removeButton = document.createElement('button');
                removeButton.textContent = 'X';
                removeButton.className = 'btn btn-danger btn-sm float-end';
                removeButton.onclick = () => removeFile(index);
                cell.appendChild(removeButton);
                row.appendChild(cell);
                fileList.appendChild(row);
            });

            if (selectedFiles.length === 0) {
                const row = document.createElement('tr');
                const cell = document.createElement('td');
                cell.className = 'colspan-4 text-center';
                cell.textContent = 'No files selected';
                row.appendChild(cell);
                fileList.appendChild(row);
            }

            toggleSubmitButton(); // Call here to update the submit button state
        }

        function removeFile(index) {
            selectedFiles.splice(index, 1);
            updateFileListDisplay();
            toggleSubmitButton(); // Call here to update the submit button state
        }

        function submitFiles() {
            if (selectedFiles.length === 0) {
                alert('No files selected');
                return;
            }

            const submitButton = document.getElementById('submitButton');
            const uploadButton = document.getElementById('uploadButton');

            submitButton.disabled = true;
            uploadButton.disabled = true;

            const formData = new FormData();
            selectedFiles.forEach(file => formData.append('file', file));

            fetch('/upload', {
                method: 'POST',
                body: formData
            })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function displayResults(data) {
            const results = document.getElementById('results');
            results.innerHTML = '';

            if (data.length > 0) {
                data.forEach(item => {
                    const row = document.createElement('tr');
                    const nameCell = document.createElement('td');
                    const idCell = document.createElement('td');
                    const valueCell = document.createElement('td');

                    nameCell.textContent = item.bgc_name;

                    // Create a link for the GCF ID
                    const gcfLink = document.createElement('a');
                    gcfLink.href = `https://bgc-atlas.cs.uni-tuebingen.de/bgcs?gcf=${item.gcf_id}`;
                    gcfLink.textContent = item.gcf_id;
                    gcfLink.target = '_blank';
                    idCell.appendChild(gcfLink);

                    valueCell.textContent = item.membership_value;

                    row.appendChild(nameCell);
                    row.appendChild(idCell);
                    row.appendChild(valueCell);
                    results.appendChild(row);
                });
            } else {
                const row = document.createElement('tr');
                const cell = document.createElement('td');
                cell.className = 'colspan-3 text-center';
                cell.textContent = 'No results to display';
                row.appendChild(cell);
                results.appendChild(row);
            }
        }

        function toggleSubmitButton() {
            const submitButton = document.getElementById('submitButton');
            if (submitButton) {
                submitButton.disabled = selectedFiles.length === 0;
            }
        }

        // Listen for server-sent events
        const eventSource = new EventSource('/events');
        eventSource.onmessage = function (event) {
            const data = JSON.parse(event.data);
            const status = document.getElementById('status');

            if (data.status === 'Complete') {
                displayResults(data.records);
            }

            status.innerHTML = `<strong>Status:</strong> ${data.status}`;
        };

        // Initialize the Submit button state
        document.addEventListener('DOMContentLoaded', toggleSubmitButton);